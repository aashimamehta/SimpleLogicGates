// BEE425
// Lab 0 XOR demonstration
// AASHIMA MEHTA, 4/4/20
// XOR module
// XOR testbench module

module BEE425XOR(
		input logic a, b, c,
		output logic out);
		
      assign out=a^b^c;
		
endmodule


module xor_testbench(); 
  logic a, b, c, out, clk; 
  parameter	CLOCK_PERIOD = 100;	// simulating a toggling clock
initial clk <= 0;
always begin
	#(CLOCK_PERIOD/2);
	clk = ~clk;				// clock toggle
	end
	
BEE425XOR dut (a,b,c,out);	// reference the device under test

	initial begin				// embed the test vector
		a <= 0; b <= 0; c <= 0;	@(posedge clk);
		a <= 1; b <= 0; c <= 0;	@(posedge clk);
		a <= 0; b <= 1; c <= 0;	@(posedge clk);
		a <= 1; b <= 1; c <= 0;	@(posedge clk);
		a <= 0; b <= 0; c <= 1;	@(posedge clk);
		a <= 1; b <= 0; c <= 1;	@(posedge clk);
		a <= 0; b <= 1; c <= 1;	@(posedge clk);
		a <= 1; b <= 1; c <= 1;	@(posedge clk);
		$stop; 
	end

endmodule
